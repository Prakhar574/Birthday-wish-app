{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pkati\\\\Downloads\\\\Birthday-Wisher-master\\\\src\\\\Birthday.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Countdown from './Countdown';\nimport githubLogo from './githubLogo.svg';\nimport { Link } from 'react-router-dom';\nconst Birthday = ({\n  name,\n  day,\n  month\n}) => {\n  _s();\n  // useState Hooks\n  const [state, setState] = useState({\n    seconds: 0,\n    hours: 0,\n    minutes: 0,\n    days: 0,\n    isItBday: false\n  });\n  if (name === undefined || day === undefined || month === undefined) {\n    // This is if not enough params are provided\n    name = 'Deepankar'; // Name of the Person\n    month = 6; // Month of the Birthday\n    day = 14; // Day of the Birthday\n  }\n\n  // get current time\n  const currentTime = new Date();\n  // get current year\n  const currentYear = currentTime.getFullYear();\n\n  // Getting the Birthday in Data Object\n  // WE subtract 1 from momnth ; Months start from 0 in Date Object\n  // Bithday Boolean\n  const isItBday = currentTime.getDate() === day && currentTime.getMonth() === month - 1;\n  useEffect(() => {\n    setInterval(() => {\n      const countdown = () => {\n        // Getting the Current Date\n        const dateAtm = new Date();\n\n        // if the Birthday has passed\n        // then set the Birthday countdown for next year\n        let birthdayDay = new Date(currentYear, month - 1, day);\n        if (dateAtm > birthdayDay) {\n          birthdayDay = new Date(currentYear + 1, month - 1, day);\n        } else if (dateAtm.getFullYear() === birthdayDay.getFullYear() + 1) {\n          birthdayDay = new Date(currentYear, month - 1, day);\n        }\n\n        // Getitng Current Time\n        const currentTime = dateAtm.getTime();\n        // Getting Birthdays Time\n        const birthdayTime = birthdayDay.getTime();\n\n        // Time remaining for the Birthday\n        const timeRemaining = birthdayTime - currentTime;\n        let seconds = Math.floor(timeRemaining / 1000);\n        let minutes = Math.floor(seconds / 60);\n        let hours = Math.floor(minutes / 60);\n        let days = Math.floor(hours / 24);\n        seconds %= 60;\n        minutes %= 60;\n        hours %= 24;\n\n        // Setting States\n        setState(prevState => ({\n          ...prevState,\n          seconds,\n          minutes,\n          hours,\n          days,\n          isItBday\n        }));\n        // console.log(`${days}:${hours}:${minutes}:${seconds} , ${isItBday}`);\n      };\n      if (!isItBday) {\n        countdown();\n      } else {\n        setState(prevState => ({\n          ...prevState,\n          isItBday: true\n        }));\n      }\n    }, 1000);\n  }, [currentYear, day, isItBday, month]);\n  let birth = new Date(currentYear, month - 1, day);\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  let monthBday = monthNames[birth.getMonth()];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Countdown, {\n    countdownData: state,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), !isItBday && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"birthdate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Birth-Date: \", day, \" \", monthBday, \" \", currentYear), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"credits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/Deep-Codes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"public\\\\logo192.png\",\n    alt: \"Github-Logo\",\n    className: \"github-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/generate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Generate Here\")));\n};\n_s(Birthday, \"XmDEiVmTTWOuiC5h0jf+CSt/IFg=\");\n_c = Birthday;\nexport default Birthday;\nvar _c;\n$RefreshReg$(_c, \"Birthday\");","map":{"version":3,"names":["React","useState","useEffect","Countdown","githubLogo","Link","Birthday","name","day","month","_s","state","setState","seconds","hours","minutes","days","isItBday","undefined","currentTime","Date","currentYear","getFullYear","getDate","getMonth","setInterval","countdown","dateAtm","birthdayDay","getTime","birthdayTime","timeRemaining","Math","floor","prevState","birth","monthNames","monthBday","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","countdownData","Fragment","href","src","alt","to","_c","$RefreshReg$"],"sources":["C:/Users/pkati/Downloads/Birthday-Wisher-master/src/Birthday.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Countdown from './Countdown';\nimport githubLogo from './githubLogo.svg';\nimport { Link } from 'react-router-dom';\n\nconst Birthday = ({ name, day, month }) => {\n  // useState Hooks\n  const [state, setState] = useState({\n    seconds: 0,\n    hours: 0,\n    minutes: 0,\n    days: 0,\n    isItBday: false,\n  });\n\n  if (name === undefined || day === undefined || month === undefined) {\n    // This is if not enough params are provided\n    name = 'Deepankar'; // Name of the Person\n    month = 6; // Month of the Birthday\n    day = 14; // Day of the Birthday\n  }\n\n  // get current time\n  const currentTime = new Date();\n  // get current year\n  const currentYear = currentTime.getFullYear();\n\n  // Getting the Birthday in Data Object\n  // WE subtract 1 from momnth ; Months start from 0 in Date Object\n  // Bithday Boolean\n  const isItBday =\n    currentTime.getDate() === day && currentTime.getMonth() === month - 1;\n\n  useEffect(() => {\n    setInterval(() => {\n      const countdown = () => {\n        // Getting the Current Date\n        const dateAtm = new Date();\n\n        // if the Birthday has passed\n        // then set the Birthday countdown for next year\n        let birthdayDay = new Date(currentYear, month - 1, day);\n        if (dateAtm > birthdayDay) {\n          birthdayDay = new Date(currentYear + 1, month - 1, day);\n        } else if (dateAtm.getFullYear() === birthdayDay.getFullYear() + 1) {\n          birthdayDay = new Date(currentYear, month - 1, day);\n        }\n\n        // Getitng Current Time\n        const currentTime = dateAtm.getTime();\n        // Getting Birthdays Time\n        const birthdayTime = birthdayDay.getTime();\n\n        // Time remaining for the Birthday\n        const timeRemaining = birthdayTime - currentTime;\n\n        let seconds = Math.floor(timeRemaining / 1000);\n        let minutes = Math.floor(seconds / 60);\n        let hours = Math.floor(minutes / 60);\n        let days = Math.floor(hours / 24);\n\n        seconds %= 60;\n        minutes %= 60;\n        hours %= 24;\n\n        // Setting States\n        setState((prevState) => ({\n          ...prevState,\n          seconds,\n          minutes,\n          hours,\n          days,\n          isItBday,\n        }));\n        // console.log(`${days}:${hours}:${minutes}:${seconds} , ${isItBday}`);\n      };\n      if (!isItBday) {\n        countdown();\n      } else {\n        setState((prevState) => ({\n          ...prevState,\n          isItBday: true,\n        }));\n      }\n    }, 1000);\n  }, [currentYear, day, isItBday, month]);\n\n  let birth = new Date(currentYear, month - 1, day);\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  let monthBday = monthNames[birth.getMonth()];\n\n  return (\n    <div className='page'>\n      <Countdown countdownData={state} name={name} />\n      {!isItBday && (\n        <>\n          <div className='birthdate'>\n            Birth-Date: {day} {monthBday} {currentYear}\n          </div>\n          <div className='credits'>\n            <a href='https://github.com/Deep-Codes'>\n              <img src='public\\logo192.png' alt='Github-Logo' className='github-logo' />\n            </a>\n          </div>\n          <Link to='/generate'>Generate Here</Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Birthday;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}